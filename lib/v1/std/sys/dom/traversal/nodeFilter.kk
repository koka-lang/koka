public module sys/dom/traversal/nodeFilter

// Interface NodeFilter (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeNodeFilter  : forall<a> (a) -> maybe<nodeFilter>
{ inline "(#1.toString()==='[object NodeFilter]'?std_core.Just(#1):std_core.Nothing)" }
external inline toNodeFilter : forall<a> (a) -> exn nodeFilter
{ inline "(#1.toString()==='[object NodeFilter]'?#1:std_core.error('toNodeFilter: cast failed'))" }


// NodeFilter implements NodeFilter (supplemental)
external inline acceptNode : (this: nodeFilter, n: node) -> dom int16
{ inline "#1.acceptNode(#2)" }

