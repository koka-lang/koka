public module sys/dom/domImplementation

// Interface DOMImplementation (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeDomImplementation  : forall<a> (a) -> maybe<domImplementation>
{ inline "(#1.toString()==='[object DOMImplementation]'?std_core.Just(#1):std_core.Nothing)" }
external inline toDomImplementation : forall<a> (a) -> exn domImplementation
{ inline "(#1.toString()==='[object DOMImplementation]'?#1:std_core.error('toDomImplementation: cast failed'))" }


// DOMImplementation implements DOMImplementation (supplemental)
external inline hasFeature : (this: domImplementation, feature: string, version: string) -> dom bool
{ inline "#1.hasFeature(#2, #3)" }

external inline createDocumentType : (this: domImplementation, qualifiedName: string, publicId: string, systemId: string) -> dom documentType
{ inline "#1.createDocumentType(#2, #3, #4)" }

external inline createDocument : (this: domImplementation, namespace: string, qualifiedName: string, doctype: documentType) -> dom document
{ inline "#1.createDocument(#2, #3, #4)" }

external inline createHtmlDocument : (this: domImplementation, title: string) -> dom document
{ inline "#1.createHTMLDocument(#2)" }

// DOMImplementation implements DOMImplementationCSS (overloading)
external inline createCssStyleSheet : (this: domImplementation, title: string, media: string) -> dom cssStyleSheet
{ inline "#1.createCSSStyleSheet(#2, #3)" }

