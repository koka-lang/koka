public module sys/dom/formData

// Interface FormData (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeFormData  : forall<a> (a) -> maybe<formData>
{ inline "(#1.toString()==='[object FormData]'?std_core.Just(#1):std_core.Nothing)" }
external inline toFormData : forall<a> (a) -> exn formData
{ inline "(#1.toString()==='[object FormData]'?#1:std_core.error('toFormData: cast failed'))" }


// FormData implements FormData (supplemental)
external inline append : (this: formData, name: string, value: blob) -> dom ()
{ inline "#1.append(#2, #3)" }

external inline append : (this: formData, name: string, value: string) -> dom ()
{ inline "#1.append(#2, #3)" }

