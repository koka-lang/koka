public module sys/dom/html/dataTransferItem

// Interface DataTransferItem (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeDataTransferItem  : forall<a> (a) -> maybe<dataTransferItem>
{ inline "(#1.toString()==='[object DataTransferItem]'?std_core.Just(#1):std_core.Nothing)" }
external inline toDataTransferItem : forall<a> (a) -> exn dataTransferItem
{ inline "(#1.toString()==='[object DataTransferItem]'?#1:std_core.error('toDataTransferItem: cast failed'))" }


// DataTransferItem implements DataTransferItem (supplemental)
external inline kind : (this: dataTransferItem) -> dom string
{ inline "#1.kind" }
external inline type_ : (this: dataTransferItem) -> dom string
{ inline "#1.type" }
external inline getAsString : (this: dataTransferItem, callback: functionStringCallback) -> dom ()
{ inline "#1.getAsString(#2)" }

external inline getAsFile : (this: dataTransferItem) -> dom file
{ inline "#1.getAsFile()" }

