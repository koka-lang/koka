public module sys/dom/html/textTrack

// Interface TextTrack (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeTextTrack  : forall<a> (a) -> maybe<textTrack>
{ inline "(#1.toString()==='[object TextTrack]'?std_core.Just(#1):std_core.Nothing)" }
external inline toTextTrack : forall<a> (a) -> exn textTrack
{ inline "(#1.toString()==='[object TextTrack]'?#1:std_core.error('toTextTrack: cast failed'))" }


// TextTrack implements TextTrack (supplemental)
external inline kind : (this: textTrack) -> dom string
{ inline "#1.kind" }
external inline label : (this: textTrack) -> dom string
{ inline "#1.label" }
external inline language : (this: textTrack) -> dom string
{ inline "#1.language" }
external inline readyState : (this: textTrack) -> dom textTrackReadyState
{ inline "#1.readyState" }
external inline onload : (this: textTrack) -> dom (event -> dom ())
{ inline "#1.onload" }
external inline onload : forall<e> (this: textTrack, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onload = #2)" }
external inline onload : forall<e> (this: textTrack, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onload = #2)" }
external inline onerror : (this: textTrack) -> dom (event -> dom ())
{ inline "#1.onerror" }
external inline onerror : forall<e> (this: textTrack, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onerror = #2)" }
external inline onerror : forall<e> (this: textTrack, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onerror = #2)" }
external inline mode : (this: textTrack) -> dom textTrackMode
{ inline "#1.mode" }
external inline mode : (this: textTrack, assigned: uint16) -> dom ()
{ inline "(#1.mode = #2)" }
external inline cues : (this: textTrack) -> dom textTrackCueList
{ inline "#1.cues" }
external inline activeCues : (this: textTrack) -> dom textTrackCueList
{ inline "#1.activeCues" }
external inline oncuechange : (this: textTrack) -> dom (event -> dom ())
{ inline "#1.oncuechange" }
external inline oncuechange : forall<e> (this: textTrack, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncuechange = #2)" }
external inline oncuechange : forall<e> (this: textTrack, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncuechange = #2)" }
// TextTrack implements EventTarget (overloading)
external inline addEventListener : (this: textTrack, type_: string, listener: eventListener) -> dom ()
{ inline "#1.addEventListener(#2, #3)" }

external inline addEventListener : (this: textTrack, type_: string, listener: eventListener, capture: bool) -> dom ()
{ inline "#1.addEventListener(#2, #3, #4)" }

external inline removeEventListener : (this: textTrack, type_: string, listener: eventListener) -> dom ()
{ inline "#1.removeEventListener(#2, #3)" }

external inline removeEventListener : (this: textTrack, type_: string, listener: eventListener, capture: bool) -> dom ()
{ inline "#1.removeEventListener(#2, #3, #4)" }

external inline dispatchEvent : (this: textTrack, event: event) -> dom bool
{ inline "#1.dispatchEvent(#2)" }

