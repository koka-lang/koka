public module sys/dom/html/windowModal

// Interface WindowModal (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeWindowModal  : forall<a> (a) -> maybe<windowModal>
{ inline "(#1.toString()==='[object WindowModal]'?std_core.Just(#1):std_core.Nothing)" }
external inline toWindowModal : forall<a> (a) -> exn windowModal
{ inline "(#1.toString()==='[object WindowModal]'?#1:std_core.error('toWindowModal: cast failed'))" }


// WindowModal implements WindowModal (supplemental)
external inline dialogArguments : (this: windowModal) -> dom any /* anyGetter */
{ inline "#1.dialogArguments" }
external inline returnValue : (this: windowModal) -> dom string
{ inline "#1.returnValue" }
external inline returnValue : (this: windowModal, assigned: string) -> dom ()
{ inline "(#1.returnValue = #2)" }
