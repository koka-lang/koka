public module sys/dom/html/htmlDocument

// Interface HTMLDocument (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeHtmlDocument  : forall<a> (a) -> maybe<htmlDocument>
{ inline "(#1.toString()==='[object HTMLDocument]'?std_core.Just(#1):std_core.Nothing)" }
external inline toHtmlDocument : forall<a> (a) -> exn htmlDocument
{ inline "(#1.toString()==='[object HTMLDocument]'?#1:std_core.error('toHtmlDocument: cast failed'))" }


// HTMLDocument implements HTMLDocument (supplemental)
external inline location : (this: htmlDocument) -> dom location
{ inline "#1.location" }
external inline location : (this: htmlDocument, assigned: location) -> dom ()
{ inline "(#1.location = #2)" }
external inline url : (this: htmlDocument) -> dom string
{ inline "#1.URL" }
external inline domain : (this: htmlDocument) -> dom string
{ inline "#1.domain" }
external inline domain : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.domain = #2)" }
external inline referrer : (this: htmlDocument) -> dom string
{ inline "#1.referrer" }
external inline cookie : (this: htmlDocument) -> dom string
{ inline "#1.cookie" }
external inline cookie : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.cookie = #2)" }
external inline lastModified : (this: htmlDocument) -> dom string
{ inline "#1.lastModified" }
external inline readyState : (this: htmlDocument) -> dom string
{ inline "#1.readyState" }
external inline getElement : (this: htmlDocument, name: string) -> dom any /* anyResult */
{ inline "#1.getElement(#2)" }

external inline title : (this: htmlDocument) -> dom string
{ inline "#1.title" }
external inline title : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.title = #2)" }
external inline dir : (this: htmlDocument) -> dom string
{ inline "#1.dir" }
external inline dir : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.dir = #2)" }
external inline body : (this: htmlDocument) -> dom htmlElement
{ inline "#1.body" }
external inline body : (this: htmlDocument, assigned: htmlElement) -> dom ()
{ inline "(#1.body = #2)" }
external inline head : (this: htmlDocument) -> dom htmlHeadElement
{ inline "#1.head" }
external inline images : (this: htmlDocument) -> dom htmlCollection
{ inline "#1.images" }
external inline embeds : (this: htmlDocument) -> dom htmlCollection
{ inline "#1.embeds" }
external inline plugins : (this: htmlDocument) -> dom htmlCollection
{ inline "#1.plugins" }
external inline links : (this: htmlDocument) -> dom htmlCollection
{ inline "#1.links" }
external inline forms : (this: htmlDocument) -> dom htmlCollection
{ inline "#1.forms" }
external inline scripts : (this: htmlDocument) -> dom htmlCollection
{ inline "#1.scripts" }
external inline getElementsByName : (this: htmlDocument, elementName: string) -> dom nodeList
{ inline "#1.getElementsByName(#2)" }

external inline cssElementMap : (this: htmlDocument) -> dom domElementMap
{ inline "#1.cssElementMap" }
external inline innerHtml : (this: htmlDocument) -> dom string
{ inline "#1.innerHTML" }
external inline innerHtml : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.innerHTML = #2)" }
external inline open : (this: htmlDocument) -> dom htmlDocument
{ inline "#1.open()" }

external inline open : (this: htmlDocument, type_: string) -> dom htmlDocument
{ inline "#1.open(#2)" }

external inline open : (this: htmlDocument, type_: string, replace: string) -> dom htmlDocument
{ inline "#1.open(#2, #3)" }

external inline open : (this: htmlDocument, url: string, name: string, features: string) -> dom windowProxy
{ inline "#1.open(#2, #3, #4)" }

external inline open : (this: htmlDocument, url: string, name: string, features: string, replace: bool) -> dom windowProxy
{ inline "#1.open(#2, #3, #4, #5)" }

external inline close : (this: htmlDocument) -> dom ()
{ inline "#1.close()" }

external inline write : (this: htmlDocument) -> dom ()
{ inline "#1.write()" }

external inline write : (this: htmlDocument, text: string) -> dom ()
{ inline "#1.write(#2)" }

external inline writeln : (this: htmlDocument) -> dom ()
{ inline "#1.writeln()" }

external inline writeln : (this: htmlDocument, text: string) -> dom ()
{ inline "#1.writeln(#2)" }

external inline defaultView : (this: htmlDocument) -> dom windowProxy
{ inline "#1.defaultView" }
external inline activeElement : (this: htmlDocument) -> dom element
{ inline "#1.activeElement" }
external inline hasFocus : (this: htmlDocument) -> dom bool
{ inline "#1.hasFocus()" }

external inline designMode : (this: htmlDocument) -> dom string
{ inline "#1.designMode" }
external inline designMode : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.designMode = #2)" }
external inline execCommand : (this: htmlDocument, commandId: string) -> dom bool
{ inline "#1.execCommand(#2)" }

external inline execCommand : (this: htmlDocument, commandId: string, showUi: bool) -> dom bool
{ inline "#1.execCommand(#2, #3)" }

external inline execCommand : (this: htmlDocument, commandId: string, showUi: bool, value: string) -> dom bool
{ inline "#1.execCommand(#2, #3, #4)" }

external inline queryCommandEnabled : (this: htmlDocument, commandId: string) -> dom bool
{ inline "#1.queryCommandEnabled(#2)" }

external inline queryCommandIndeterm : (this: htmlDocument, commandId: string) -> dom bool
{ inline "#1.queryCommandIndeterm(#2)" }

external inline queryCommandState : (this: htmlDocument, commandId: string) -> dom bool
{ inline "#1.queryCommandState(#2)" }

external inline queryCommandSupported : (this: htmlDocument, commandId: string) -> dom bool
{ inline "#1.queryCommandSupported(#2)" }

external inline queryCommandValue : (this: htmlDocument, commandId: string) -> dom string
{ inline "#1.queryCommandValue(#2)" }

external inline commands : (this: htmlDocument) -> dom htmlCollection
{ inline "#1.commands" }
external inline onabort : (this: htmlDocument) -> dom (uiEvent -> dom ())
{ inline "#1.onabort" }
external inline onabort : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onabort = #2)" }
external inline onabort : forall<e> (this: htmlDocument, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onabort = #2)" }
external inline onblur : (this: htmlDocument) -> dom (focusEvent -> dom ())
{ inline "#1.onblur" }
external inline onblur : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onblur = #2)" }
external inline onblur : forall<e> (this: htmlDocument, assigned: (focusEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onblur = #2)" }
external inline oncanplay : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.oncanplay" }
external inline oncanplay : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplay = #2)" }
external inline oncanplay : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplay = #2)" }
external inline oncanplaythrough : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.oncanplaythrough" }
external inline oncanplaythrough : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplaythrough = #2)" }
external inline oncanplaythrough : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplaythrough = #2)" }
external inline onchange : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onchange" }
external inline onchange : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onchange = #2)" }
external inline onchange : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onchange = #2)" }
external inline onclick : (this: htmlDocument) -> dom (mouseEvent -> dom ())
{ inline "#1.onclick" }
external inline onclick : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onclick = #2)" }
external inline onclick : forall<e> (this: htmlDocument, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onclick = #2)" }
external inline oncontextmenu : (this: htmlDocument) -> dom (mouseEvent -> dom ())
{ inline "#1.oncontextmenu" }
external inline oncontextmenu : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncontextmenu = #2)" }
external inline oncontextmenu : forall<e> (this: htmlDocument, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncontextmenu = #2)" }
external inline oncuechange : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.oncuechange" }
external inline oncuechange : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncuechange = #2)" }
external inline oncuechange : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncuechange = #2)" }
external inline ondblclick : (this: htmlDocument) -> dom (mouseEvent -> dom ())
{ inline "#1.ondblclick" }
external inline ondblclick : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondblclick = #2)" }
external inline ondblclick : forall<e> (this: htmlDocument, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondblclick = #2)" }
external inline ondrag : (this: htmlDocument) -> dom (dragEvent -> dom ())
{ inline "#1.ondrag" }
external inline ondrag : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrag = #2)" }
external inline ondrag : forall<e> (this: htmlDocument, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrag = #2)" }
external inline ondragend : (this: htmlDocument) -> dom (dragEvent -> dom ())
{ inline "#1.ondragend" }
external inline ondragend : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragend = #2)" }
external inline ondragend : forall<e> (this: htmlDocument, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragend = #2)" }
external inline ondragenter : (this: htmlDocument) -> dom (dragEvent -> dom ())
{ inline "#1.ondragenter" }
external inline ondragenter : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragenter = #2)" }
external inline ondragenter : forall<e> (this: htmlDocument, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragenter = #2)" }
external inline ondragleave : (this: htmlDocument) -> dom (dragEvent -> dom ())
{ inline "#1.ondragleave" }
external inline ondragleave : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragleave = #2)" }
external inline ondragleave : forall<e> (this: htmlDocument, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragleave = #2)" }
external inline ondragover : (this: htmlDocument) -> dom (dragEvent -> dom ())
{ inline "#1.ondragover" }
external inline ondragover : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragover = #2)" }
external inline ondragover : forall<e> (this: htmlDocument, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragover = #2)" }
external inline ondragstart : (this: htmlDocument) -> dom (dragEvent -> dom ())
{ inline "#1.ondragstart" }
external inline ondragstart : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragstart = #2)" }
external inline ondragstart : forall<e> (this: htmlDocument, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragstart = #2)" }
external inline ondrop : (this: htmlDocument) -> dom (dragEvent -> dom ())
{ inline "#1.ondrop" }
external inline ondrop : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrop = #2)" }
external inline ondrop : forall<e> (this: htmlDocument, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrop = #2)" }
external inline ondurationchange : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.ondurationchange" }
external inline ondurationchange : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondurationchange = #2)" }
external inline ondurationchange : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondurationchange = #2)" }
external inline onemptied : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onemptied" }
external inline onemptied : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onemptied = #2)" }
external inline onemptied : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onemptied = #2)" }
external inline onended : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onended" }
external inline onended : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
external inline onended : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
external inline onerror : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onerror" }
external inline onerror : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onerror = #2)" }
external inline onerror : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onerror = #2)" }
external inline onfocus : (this: htmlDocument) -> dom (focusEvent -> dom ())
{ inline "#1.onfocus" }
external inline onfocus : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onfocus = #2)" }
external inline onfocus : forall<e> (this: htmlDocument, assigned: (focusEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onfocus = #2)" }
external inline oninput : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.oninput" }
external inline oninput : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninput = #2)" }
external inline oninput : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninput = #2)" }
external inline oninvalid : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.oninvalid" }
external inline oninvalid : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninvalid = #2)" }
external inline oninvalid : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninvalid = #2)" }
external inline onkeydown : (this: htmlDocument) -> dom (keyboardEvent -> dom ())
{ inline "#1.onkeydown" }
external inline onkeydown : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeydown = #2)" }
external inline onkeydown : forall<e> (this: htmlDocument, assigned: (keyboardEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeydown = #2)" }
external inline onkeypress : (this: htmlDocument) -> dom (keyboardEvent -> dom ())
{ inline "#1.onkeypress" }
external inline onkeypress : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeypress = #2)" }
external inline onkeypress : forall<e> (this: htmlDocument, assigned: (keyboardEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeypress = #2)" }
external inline onkeyup : (this: htmlDocument) -> dom (keyboardEvent -> dom ())
{ inline "#1.onkeyup" }
external inline onkeyup : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeyup = #2)" }
external inline onkeyup : forall<e> (this: htmlDocument, assigned: (keyboardEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeyup = #2)" }
external inline onload : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onload" }
external inline onload : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onload = #2)" }
external inline onload : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onload = #2)" }
external inline onloadeddata : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onloadeddata" }
external inline onloadeddata : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadeddata = #2)" }
external inline onloadeddata : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadeddata = #2)" }
external inline onloadedmetadata : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onloadedmetadata" }
external inline onloadedmetadata : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadedmetadata = #2)" }
external inline onloadedmetadata : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadedmetadata = #2)" }
external inline onloadstart : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onloadstart" }
external inline onloadstart : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadstart = #2)" }
external inline onloadstart : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadstart = #2)" }
external inline onmousedown : (this: htmlDocument) -> dom (mouseEvent -> dom ())
{ inline "#1.onmousedown" }
external inline onmousedown : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousedown = #2)" }
external inline onmousedown : forall<e> (this: htmlDocument, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousedown = #2)" }
external inline onmousemove : (this: htmlDocument) -> dom (mouseEvent -> dom ())
{ inline "#1.onmousemove" }
external inline onmousemove : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousemove = #2)" }
external inline onmousemove : forall<e> (this: htmlDocument, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousemove = #2)" }
external inline onmouseout : (this: htmlDocument) -> dom (mouseEvent -> dom ())
{ inline "#1.onmouseout" }
external inline onmouseout : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseout = #2)" }
external inline onmouseout : forall<e> (this: htmlDocument, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseout = #2)" }
external inline onmouseover : (this: htmlDocument) -> dom (mouseEvent -> dom ())
{ inline "#1.onmouseover" }
external inline onmouseover : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseover = #2)" }
external inline onmouseover : forall<e> (this: htmlDocument, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseover = #2)" }
external inline onmouseup : (this: htmlDocument) -> dom (mouseEvent -> dom ())
{ inline "#1.onmouseup" }
external inline onmouseup : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseup = #2)" }
external inline onmouseup : forall<e> (this: htmlDocument, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseup = #2)" }
external inline onmousewheel : (this: htmlDocument) -> dom (wheelEvent -> dom ())
{ inline "#1.onmousewheel" }
external inline onmousewheel : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousewheel = #2)" }
external inline onmousewheel : forall<e> (this: htmlDocument, assigned: (wheelEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousewheel = #2)" }
external inline onpause : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onpause" }
external inline onpause : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpause = #2)" }
external inline onpause : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpause = #2)" }
external inline onplay : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onplay" }
external inline onplay : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplay = #2)" }
external inline onplay : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplay = #2)" }
external inline onplaying : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onplaying" }
external inline onplaying : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplaying = #2)" }
external inline onplaying : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplaying = #2)" }
external inline onprogress : (this: htmlDocument) -> dom (progressEvent -> dom ())
{ inline "#1.onprogress" }
external inline onprogress : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onprogress = #2)" }
external inline onprogress : forall<e> (this: htmlDocument, assigned: (progressEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onprogress = #2)" }
external inline onratechange : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onratechange" }
external inline onratechange : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onratechange = #2)" }
external inline onratechange : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onratechange = #2)" }
external inline onreadystatechange : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onreadystatechange" }
external inline onreadystatechange : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreadystatechange = #2)" }
external inline onreadystatechange : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreadystatechange = #2)" }
external inline onreset : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onreset" }
external inline onreset : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreset = #2)" }
external inline onreset : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreset = #2)" }
external inline onscroll : (this: htmlDocument) -> dom (uiEvent -> dom ())
{ inline "#1.onscroll" }
external inline onscroll : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onscroll = #2)" }
external inline onscroll : forall<e> (this: htmlDocument, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onscroll = #2)" }
external inline onseeked : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onseeked" }
external inline onseeked : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeked = #2)" }
external inline onseeked : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeked = #2)" }
external inline onseeking : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onseeking" }
external inline onseeking : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeking = #2)" }
external inline onseeking : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeking = #2)" }
external inline onselect : (this: htmlDocument) -> dom (uiEvent -> dom ())
{ inline "#1.onselect" }
external inline onselect : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onselect = #2)" }
external inline onselect : forall<e> (this: htmlDocument, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onselect = #2)" }
external inline onshow : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onshow" }
external inline onshow : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onshow = #2)" }
external inline onshow : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onshow = #2)" }
external inline onstalled : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onstalled" }
external inline onstalled : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onstalled = #2)" }
external inline onstalled : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onstalled = #2)" }
external inline onsubmit : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onsubmit" }
external inline onsubmit : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsubmit = #2)" }
external inline onsubmit : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsubmit = #2)" }
external inline onsuspend : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onsuspend" }
external inline onsuspend : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsuspend = #2)" }
external inline onsuspend : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsuspend = #2)" }
external inline ontimeupdate : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.ontimeupdate" }
external inline ontimeupdate : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ontimeupdate = #2)" }
external inline ontimeupdate : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ontimeupdate = #2)" }
external inline onvolumechange : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onvolumechange" }
external inline onvolumechange : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onvolumechange = #2)" }
external inline onvolumechange : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onvolumechange = #2)" }
external inline onwaiting : (this: htmlDocument) -> dom (event -> dom ())
{ inline "#1.onwaiting" }
external inline onwaiting : forall<e> (this: htmlDocument, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onwaiting = #2)" }
external inline onwaiting : forall<e> (this: htmlDocument, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onwaiting = #2)" }
// HTMLDocument implements HTMLDocument-34 (supplemental)
external inline fgColor : (this: htmlDocument) -> dom string
{ inline "#1.fgColor" }
external inline fgColor : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.fgColor = #2)" }
external inline bgColor : (this: htmlDocument) -> dom string
{ inline "#1.bgColor" }
external inline bgColor : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.bgColor = #2)" }
external inline linkColor : (this: htmlDocument) -> dom string
{ inline "#1.linkColor" }
external inline linkColor : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.linkColor = #2)" }
external inline vlinkColor : (this: htmlDocument) -> dom string
{ inline "#1.vlinkColor" }
external inline vlinkColor : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.vlinkColor = #2)" }
external inline alinkColor : (this: htmlDocument) -> dom string
{ inline "#1.alinkColor" }
external inline alinkColor : (this: htmlDocument, assigned: string) -> dom ()
{ inline "(#1.alinkColor = #2)" }
external inline anchors : (this: htmlDocument) -> dom htmlCollection
{ inline "#1.anchors" }
external inline applets : (this: htmlDocument) -> dom htmlCollection
{ inline "#1.applets" }
external inline clear : (this: htmlDocument) -> dom ()
{ inline "#1.clear()" }

external inline all : (this: htmlDocument) -> dom htmlAllCollection
{ inline "#1.all" }
