public module sys/dom/html/htmlPropertiesCollection

// Interface HTMLPropertiesCollection (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeHtmlPropertiesCollection  : forall<a> (a) -> maybe<htmlPropertiesCollection>
{ inline "(#1.toString()==='[object HTMLPropertiesCollection]'?std_core.Just(#1):std_core.Nothing)" }
external inline toHtmlPropertiesCollection : forall<a> (a) -> exn htmlPropertiesCollection
{ inline "(#1.toString()==='[object HTMLPropertiesCollection]'?#1:std_core.error('toHtmlPropertiesCollection: cast failed'))" }


// HTMLPropertiesCollection implements HTMLPropertiesCollection (supplemental)
external inline namedItem : (this: htmlPropertiesCollection, name: string) -> dom propertyNodeList
{ inline "#1.namedItem(#2)" }

external inline names : (this: htmlPropertiesCollection) -> dom domStringList
{ inline "#1.names" }
// HTMLPropertiesCollection extends HTMLCollection
external inline htmlCollection : (htmlPropertiesCollection) -> htmlCollection // upcasting to extended type
{ inline "#1" }
// HTMLPropertiesCollection implements in extension HTMLCollection (overloading)
external inline length : (this: htmlPropertiesCollection) -> dom uint32
{ inline "#1.length" }
external inline item : (this: htmlPropertiesCollection, index: uint32) -> dom element
{ inline "#1.item(#2)" }

external inline namedItem : (this: htmlPropertiesCollection, name: string) -> dom any /* former ::object */
{ inline "#1.namedItem(#2)" }

