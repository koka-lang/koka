public module sys/dom/html/htmlBaseFontElement

// Interface HTMLBaseFontElement (generated by esidl 0.2.0).

import sys/dom/types

external inline createHtmlBaseFontElement : (document: document) -> dom htmlBaseFontElement
{ inline "#1.createElement('baseFont')" }

/* safe and unsafe conversion from all types including `any */
external inline maybeHtmlBaseFontElement : forall<a> (a) -> maybe<htmlBaseFontElement>
{ inline "(#1.tagName==='BASEFONT'?std_core.Just(#1):std_core.Nothing)" }
external inline toHtmlBaseFontElement : forall<a> (a) -> exn htmlBaseFontElement
{ inline "(#1.tagName==='BASEFONT'?#1:std_core.error('toHtmlBaseFontElement: cast failed'))" }


// HTMLBaseFontElement implements HTMLBaseFontElement (supplemental)
external inline color : (this: htmlBaseFontElement) -> dom string
{ inline "#1.color" }
external inline color : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.color = #2)" }
external inline face : (this: htmlBaseFontElement) -> dom string
{ inline "#1.face" }
external inline face : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.face = #2)" }
external inline size : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.size" }
external inline size : (this: htmlBaseFontElement, assigned: int32) -> dom ()
{ inline "(#1.size = #2)" }
// HTMLBaseFontElement extends HTMLElement
external inline htmlElement : (htmlBaseFontElement) -> htmlElement // upcasting to extended type
{ inline "#1" }
// HTMLBaseFontElement implements in extension HTMLElement (overloading)
external inline getElementsByClassName : (this: htmlBaseFontElement, classNames: string) -> dom nodeList
{ inline "#1.getElementsByClassName(#2)" }

external inline innerHtml : (this: htmlBaseFontElement) -> dom string
{ inline "#1.innerHTML" }
external inline innerHtml : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.innerHTML = #2)" }
external inline outerHtml : (this: htmlBaseFontElement) -> dom string
{ inline "#1.outerHTML" }
external inline outerHtml : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.outerHTML = #2)" }
external inline insertAdjacentHtml : (this: htmlBaseFontElement, position: string, text: string) -> dom ()
{ inline "#1.insertAdjacentHTML(#2, #3)" }

external inline id : (this: htmlBaseFontElement) -> dom string
{ inline "#1.id" }
external inline id : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.id = #2)" }
external inline title : (this: htmlBaseFontElement) -> dom string
{ inline "#1.title" }
external inline title : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.title = #2)" }
external inline lang : (this: htmlBaseFontElement) -> dom string
{ inline "#1.lang" }
external inline lang : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.lang = #2)" }
external inline dir : (this: htmlBaseFontElement) -> dom string
{ inline "#1.dir" }
external inline dir : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.dir = #2)" }
external inline className : (this: htmlBaseFontElement) -> dom string
{ inline "#1.className" }
external inline className : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.className = #2)" }
external inline classList : (this: htmlBaseFontElement) -> dom domTokenList
{ inline "#1.classList" }
external inline dataset : (this: htmlBaseFontElement) -> dom domStringMap
{ inline "#1.dataset" }
external inline itemScope : (this: htmlBaseFontElement) -> dom bool
{ inline "#1.itemScope" }
external inline itemScope : (this: htmlBaseFontElement, assigned: bool) -> dom ()
{ inline "(#1.itemScope = #2)" }
external inline itemType : (this: htmlBaseFontElement) -> dom string
{ inline "#1.itemType" }
external inline itemType : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.itemType = #2)" }
external inline itemId : (this: htmlBaseFontElement) -> dom string
{ inline "#1.itemId" }
external inline itemId : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.itemId = #2)" }
external inline itemRef : (this: htmlBaseFontElement) -> dom domSettableTokenList
{ inline "#1.itemRef" }
external inline itemRef : (this: htmlBaseFontElement, assigned: domSettableTokenList) -> dom ()
{ inline "(#1.itemRef = #2)" }
external inline itemProp : (this: htmlBaseFontElement) -> dom domSettableTokenList
{ inline "#1.itemProp" }
external inline itemProp : (this: htmlBaseFontElement, assigned: domSettableTokenList) -> dom ()
{ inline "(#1.itemProp = #2)" }
external inline properties : (this: htmlBaseFontElement) -> dom htmlPropertiesCollection
{ inline "#1.properties" }


external inline hidden : (this: htmlBaseFontElement) -> dom bool
{ inline "#1.hidden" }
external inline hidden : (this: htmlBaseFontElement, assigned: bool) -> dom ()
{ inline "(#1.hidden = #2)" }
external inline click : (this: htmlBaseFontElement) -> dom ()
{ inline "#1.click()" }

external inline tabIndex : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.tabIndex" }
external inline tabIndex : (this: htmlBaseFontElement, assigned: int32) -> dom ()
{ inline "(#1.tabIndex = #2)" }
external inline focus : (this: htmlBaseFontElement) -> dom ()
{ inline "#1.focus()" }

external inline blur : (this: htmlBaseFontElement) -> dom ()
{ inline "#1.blur()" }

external inline accessKey : (this: htmlBaseFontElement) -> dom string
{ inline "#1.accessKey" }
external inline accessKey : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.accessKey = #2)" }
external inline accessKeyLabel : (this: htmlBaseFontElement) -> dom string
{ inline "#1.accessKeyLabel" }
external inline draggable : (this: htmlBaseFontElement) -> dom bool
{ inline "#1.draggable" }
external inline draggable : (this: htmlBaseFontElement, assigned: bool) -> dom ()
{ inline "(#1.draggable = #2)" }
external inline dropzone : (this: htmlBaseFontElement) -> dom domSettableTokenList
{ inline "#1.dropzone" }
external inline dropzone : (this: htmlBaseFontElement, assigned: domSettableTokenList) -> dom ()
{ inline "(#1.dropzone = #2)" }
external inline contentEditable : (this: htmlBaseFontElement) -> dom string
{ inline "#1.contentEditable" }
external inline contentEditable : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.contentEditable = #2)" }
external inline isContentEditable : (this: htmlBaseFontElement) -> dom bool
{ inline "#1.isContentEditable" }
external inline contextMenu : (this: htmlBaseFontElement) -> dom htmlMenuElement
{ inline "#1.contextMenu" }
external inline contextMenu : (this: htmlBaseFontElement, assigned: htmlMenuElement) -> dom ()
{ inline "(#1.contextMenu = #2)" }
external inline spellcheck : (this: htmlBaseFontElement) -> dom bool
{ inline "#1.spellcheck" }
external inline spellcheck : (this: htmlBaseFontElement, assigned: bool) -> dom ()
{ inline "(#1.spellcheck = #2)" }
external inline commandType : (this: htmlBaseFontElement) -> dom string
{ inline "#1.commandType" }
external inline label : (this: htmlBaseFontElement) -> dom string
{ inline "#1.label" }
external inline icon : (this: htmlBaseFontElement) -> dom string
{ inline "#1.icon" }
external inline disabled : (this: htmlBaseFontElement) -> dom bool
{ inline "#1.disabled" }
external inline checked : (this: htmlBaseFontElement) -> dom bool
{ inline "#1.checked" }
external inline style : (this: htmlBaseFontElement) -> dom cssStyleDeclaration
{ inline "#1.style" }
external inline onabort : (this: htmlBaseFontElement) -> dom (uiEvent -> dom ())
{ inline "#1.onabort" }
external inline onabort : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onabort = #2)" }
external inline onabort : forall<e> (this: htmlBaseFontElement, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onabort = #2)" }
external inline onblur : (this: htmlBaseFontElement) -> dom (focusEvent -> dom ())
{ inline "#1.onblur" }
external inline onblur : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onblur = #2)" }
external inline onblur : forall<e> (this: htmlBaseFontElement, assigned: (focusEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onblur = #2)" }
external inline oncanplay : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.oncanplay" }
external inline oncanplay : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplay = #2)" }
external inline oncanplay : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplay = #2)" }
external inline oncanplaythrough : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.oncanplaythrough" }
external inline oncanplaythrough : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplaythrough = #2)" }
external inline oncanplaythrough : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplaythrough = #2)" }
external inline onchange : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onchange" }
external inline onchange : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onchange = #2)" }
external inline onchange : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onchange = #2)" }
external inline onclick : (this: htmlBaseFontElement) -> dom (mouseEvent -> dom ())
{ inline "#1.onclick" }
external inline onclick : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onclick = #2)" }
external inline onclick : forall<e> (this: htmlBaseFontElement, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onclick = #2)" }
external inline oncontextmenu : (this: htmlBaseFontElement) -> dom (mouseEvent -> dom ())
{ inline "#1.oncontextmenu" }
external inline oncontextmenu : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncontextmenu = #2)" }
external inline oncontextmenu : forall<e> (this: htmlBaseFontElement, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncontextmenu = #2)" }
external inline oncuechange : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.oncuechange" }
external inline oncuechange : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncuechange = #2)" }
external inline oncuechange : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncuechange = #2)" }
external inline ondblclick : (this: htmlBaseFontElement) -> dom (mouseEvent -> dom ())
{ inline "#1.ondblclick" }
external inline ondblclick : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondblclick = #2)" }
external inline ondblclick : forall<e> (this: htmlBaseFontElement, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondblclick = #2)" }
external inline ondrag : (this: htmlBaseFontElement) -> dom (dragEvent -> dom ())
{ inline "#1.ondrag" }
external inline ondrag : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrag = #2)" }
external inline ondrag : forall<e> (this: htmlBaseFontElement, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrag = #2)" }
external inline ondragend : (this: htmlBaseFontElement) -> dom (dragEvent -> dom ())
{ inline "#1.ondragend" }
external inline ondragend : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragend = #2)" }
external inline ondragend : forall<e> (this: htmlBaseFontElement, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragend = #2)" }
external inline ondragenter : (this: htmlBaseFontElement) -> dom (dragEvent -> dom ())
{ inline "#1.ondragenter" }
external inline ondragenter : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragenter = #2)" }
external inline ondragenter : forall<e> (this: htmlBaseFontElement, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragenter = #2)" }
external inline ondragleave : (this: htmlBaseFontElement) -> dom (dragEvent -> dom ())
{ inline "#1.ondragleave" }
external inline ondragleave : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragleave = #2)" }
external inline ondragleave : forall<e> (this: htmlBaseFontElement, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragleave = #2)" }
external inline ondragover : (this: htmlBaseFontElement) -> dom (dragEvent -> dom ())
{ inline "#1.ondragover" }
external inline ondragover : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragover = #2)" }
external inline ondragover : forall<e> (this: htmlBaseFontElement, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragover = #2)" }
external inline ondragstart : (this: htmlBaseFontElement) -> dom (dragEvent -> dom ())
{ inline "#1.ondragstart" }
external inline ondragstart : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragstart = #2)" }
external inline ondragstart : forall<e> (this: htmlBaseFontElement, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragstart = #2)" }
external inline ondrop : (this: htmlBaseFontElement) -> dom (dragEvent -> dom ())
{ inline "#1.ondrop" }
external inline ondrop : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrop = #2)" }
external inline ondrop : forall<e> (this: htmlBaseFontElement, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrop = #2)" }
external inline ondurationchange : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.ondurationchange" }
external inline ondurationchange : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondurationchange = #2)" }
external inline ondurationchange : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondurationchange = #2)" }
external inline onemptied : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onemptied" }
external inline onemptied : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onemptied = #2)" }
external inline onemptied : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onemptied = #2)" }
external inline onended : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onended" }
external inline onended : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
external inline onended : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
external inline onerror : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onerror" }
external inline onerror : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onerror = #2)" }
external inline onerror : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onerror = #2)" }
external inline onfocus : (this: htmlBaseFontElement) -> dom (focusEvent -> dom ())
{ inline "#1.onfocus" }
external inline onfocus : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onfocus = #2)" }
external inline onfocus : forall<e> (this: htmlBaseFontElement, assigned: (focusEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onfocus = #2)" }
external inline oninput : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.oninput" }
external inline oninput : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninput = #2)" }
external inline oninput : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninput = #2)" }
external inline oninvalid : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.oninvalid" }
external inline oninvalid : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninvalid = #2)" }
external inline oninvalid : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninvalid = #2)" }
external inline onkeydown : (this: htmlBaseFontElement) -> dom (keyboardEvent -> dom ())
{ inline "#1.onkeydown" }
external inline onkeydown : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeydown = #2)" }
external inline onkeydown : forall<e> (this: htmlBaseFontElement, assigned: (keyboardEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeydown = #2)" }
external inline onkeypress : (this: htmlBaseFontElement) -> dom (keyboardEvent -> dom ())
{ inline "#1.onkeypress" }
external inline onkeypress : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeypress = #2)" }
external inline onkeypress : forall<e> (this: htmlBaseFontElement, assigned: (keyboardEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeypress = #2)" }
external inline onkeyup : (this: htmlBaseFontElement) -> dom (keyboardEvent -> dom ())
{ inline "#1.onkeyup" }
external inline onkeyup : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeyup = #2)" }
external inline onkeyup : forall<e> (this: htmlBaseFontElement, assigned: (keyboardEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeyup = #2)" }
external inline onload : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onload" }
external inline onload : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onload = #2)" }
external inline onload : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onload = #2)" }
external inline onloadeddata : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onloadeddata" }
external inline onloadeddata : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadeddata = #2)" }
external inline onloadeddata : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadeddata = #2)" }
external inline onloadedmetadata : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onloadedmetadata" }
external inline onloadedmetadata : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadedmetadata = #2)" }
external inline onloadedmetadata : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadedmetadata = #2)" }
external inline onloadstart : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onloadstart" }
external inline onloadstart : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadstart = #2)" }
external inline onloadstart : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadstart = #2)" }
external inline onmousedown : (this: htmlBaseFontElement) -> dom (mouseEvent -> dom ())
{ inline "#1.onmousedown" }
external inline onmousedown : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousedown = #2)" }
external inline onmousedown : forall<e> (this: htmlBaseFontElement, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousedown = #2)" }
external inline onmousemove : (this: htmlBaseFontElement) -> dom (mouseEvent -> dom ())
{ inline "#1.onmousemove" }
external inline onmousemove : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousemove = #2)" }
external inline onmousemove : forall<e> (this: htmlBaseFontElement, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousemove = #2)" }
external inline onmouseout : (this: htmlBaseFontElement) -> dom (mouseEvent -> dom ())
{ inline "#1.onmouseout" }
external inline onmouseout : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseout = #2)" }
external inline onmouseout : forall<e> (this: htmlBaseFontElement, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseout = #2)" }
external inline onmouseover : (this: htmlBaseFontElement) -> dom (mouseEvent -> dom ())
{ inline "#1.onmouseover" }
external inline onmouseover : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseover = #2)" }
external inline onmouseover : forall<e> (this: htmlBaseFontElement, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseover = #2)" }
external inline onmouseup : (this: htmlBaseFontElement) -> dom (mouseEvent -> dom ())
{ inline "#1.onmouseup" }
external inline onmouseup : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseup = #2)" }
external inline onmouseup : forall<e> (this: htmlBaseFontElement, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseup = #2)" }
external inline onmousewheel : (this: htmlBaseFontElement) -> dom (wheelEvent -> dom ())
{ inline "#1.onmousewheel" }
external inline onmousewheel : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousewheel = #2)" }
external inline onmousewheel : forall<e> (this: htmlBaseFontElement, assigned: (wheelEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousewheel = #2)" }
external inline onpause : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onpause" }
external inline onpause : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpause = #2)" }
external inline onpause : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpause = #2)" }
external inline onplay : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onplay" }
external inline onplay : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplay = #2)" }
external inline onplay : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplay = #2)" }
external inline onplaying : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onplaying" }
external inline onplaying : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplaying = #2)" }
external inline onplaying : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplaying = #2)" }
external inline onprogress : (this: htmlBaseFontElement) -> dom (progressEvent -> dom ())
{ inline "#1.onprogress" }
external inline onprogress : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onprogress = #2)" }
external inline onprogress : forall<e> (this: htmlBaseFontElement, assigned: (progressEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onprogress = #2)" }
external inline onratechange : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onratechange" }
external inline onratechange : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onratechange = #2)" }
external inline onratechange : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onratechange = #2)" }
external inline onreadystatechange : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onreadystatechange" }
external inline onreadystatechange : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreadystatechange = #2)" }
external inline onreadystatechange : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreadystatechange = #2)" }
external inline onreset : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onreset" }
external inline onreset : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreset = #2)" }
external inline onreset : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreset = #2)" }
external inline onscroll : (this: htmlBaseFontElement) -> dom (uiEvent -> dom ())
{ inline "#1.onscroll" }
external inline onscroll : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onscroll = #2)" }
external inline onscroll : forall<e> (this: htmlBaseFontElement, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onscroll = #2)" }
external inline onseeked : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onseeked" }
external inline onseeked : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeked = #2)" }
external inline onseeked : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeked = #2)" }
external inline onseeking : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onseeking" }
external inline onseeking : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeking = #2)" }
external inline onseeking : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeking = #2)" }
external inline onselect : (this: htmlBaseFontElement) -> dom (uiEvent -> dom ())
{ inline "#1.onselect" }
external inline onselect : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onselect = #2)" }
external inline onselect : forall<e> (this: htmlBaseFontElement, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onselect = #2)" }
external inline onshow : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onshow" }
external inline onshow : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onshow = #2)" }
external inline onshow : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onshow = #2)" }
external inline onstalled : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onstalled" }
external inline onstalled : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onstalled = #2)" }
external inline onstalled : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onstalled = #2)" }
external inline onsubmit : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onsubmit" }
external inline onsubmit : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsubmit = #2)" }
external inline onsubmit : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsubmit = #2)" }
external inline onsuspend : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onsuspend" }
external inline onsuspend : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsuspend = #2)" }
external inline onsuspend : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsuspend = #2)" }
external inline ontimeupdate : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.ontimeupdate" }
external inline ontimeupdate : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ontimeupdate = #2)" }
external inline ontimeupdate : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ontimeupdate = #2)" }
external inline onvolumechange : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onvolumechange" }
external inline onvolumechange : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onvolumechange = #2)" }
external inline onvolumechange : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onvolumechange = #2)" }
external inline onwaiting : (this: htmlBaseFontElement) -> dom (event -> dom ())
{ inline "#1.onwaiting" }
external inline onwaiting : forall<e> (this: htmlBaseFontElement, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onwaiting = #2)" }
external inline onwaiting : forall<e> (this: htmlBaseFontElement, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onwaiting = #2)" }
// HTMLBaseFontElement implements in extension HTMLElement (overloading)
external inline offsetParent : (this: htmlBaseFontElement) -> dom element
{ inline "#1.offsetParent" }
external inline offsetTop : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.offsetTop" }
external inline offsetLeft : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.offsetLeft" }
external inline offsetWidth : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.offsetWidth" }
external inline offsetHeight : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.offsetHeight" }
// HTMLBaseFontElement extends Element
external inline element : (htmlBaseFontElement) -> element // upcasting to extended type
{ inline "#1" }
// HTMLBaseFontElement implements in extension Element (overloading)
external inline namespaceUri : (this: htmlBaseFontElement) -> dom string
{ inline "#1.namespaceURI" }
external inline prefix_ : (this: htmlBaseFontElement) -> dom string
{ inline "#1.prefix" }
external inline localName : (this: htmlBaseFontElement) -> dom string
{ inline "#1.localName" }
external inline tagName : (this: htmlBaseFontElement) -> dom string
{ inline "#1.tagName" }
external inline attributes : (this: htmlBaseFontElement) -> dom list<attr>
{ inline "std_core.alert('attributes: not implemented')" }

external inline getAttribute : (this: htmlBaseFontElement, qualifiedName: string) -> dom string
{ inline "#1.getAttribute(#2)" }

external inline getAttributeNs : (this: htmlBaseFontElement, namespace: string, localName: string) -> dom string
{ inline "#1.getAttributeNS(#2, #3)" }

external inline setAttribute : (this: htmlBaseFontElement, qualifiedName: string, value: string) -> dom ()
{ inline "#1.setAttribute(#2, #3)" }

external inline setAttributeNs : (this: htmlBaseFontElement, namespace: string, qualifiedName: string, value: string) -> dom ()
{ inline "#1.setAttributeNS(#2, #3, #4)" }

external inline removeAttribute : (this: htmlBaseFontElement, qualifiedName: string) -> dom ()
{ inline "#1.removeAttribute(#2)" }

external inline removeAttributeNs : (this: htmlBaseFontElement, namespace: string, localName: string) -> dom ()
{ inline "#1.removeAttributeNS(#2, #3)" }

external inline hasAttribute : (this: htmlBaseFontElement, qualifiedName: string) -> dom bool
{ inline "#1.hasAttribute(#2)" }

external inline hasAttributeNs : (this: htmlBaseFontElement, namespace: string, localName: string) -> dom bool
{ inline "#1.hasAttributeNS(#2, #3)" }

external inline getElementsByTagName : (this: htmlBaseFontElement, qualifiedName: string) -> dom nodeList
{ inline "#1.getElementsByTagName(#2)" }

external inline getElementsByTagNameNs : (this: htmlBaseFontElement, namespace: string, localName: string) -> dom nodeList
{ inline "#1.getElementsByTagNameNS(#2, #3)" }

external inline getElementsByClassName : (this: htmlBaseFontElement, classNames: string) -> dom nodeList
{ inline "#1.getElementsByClassName(#2)" }

external inline children : (this: htmlBaseFontElement) -> dom htmlCollection
{ inline "#1.children" }
external inline firstElementChild : (this: htmlBaseFontElement) -> dom element
{ inline "#1.firstElementChild" }
external inline lastElementChild : (this: htmlBaseFontElement) -> dom element
{ inline "#1.lastElementChild" }
external inline previousElementSibling : (this: htmlBaseFontElement) -> dom element
{ inline "#1.previousElementSibling" }
external inline nextElementSibling : (this: htmlBaseFontElement) -> dom element
{ inline "#1.nextElementSibling" }
external inline childElementCount : (this: htmlBaseFontElement) -> dom uint32
{ inline "#1.childElementCount" }
// HTMLBaseFontElement implements in extension Element (overloading)
external inline getClientRects : (this: htmlBaseFontElement) -> dom clientRectList
{ inline "#1.getClientRects()" }

external inline getBoundingClientRect : (this: htmlBaseFontElement) -> dom clientRect
{ inline "#1.getBoundingClientRect()" }

external inline scrollIntoView : (this: htmlBaseFontElement) -> dom ()
{ inline "#1.scrollIntoView()" }

external inline scrollIntoView : (this: htmlBaseFontElement, top: bool) -> dom ()
{ inline "#1.scrollIntoView(#2)" }

external inline scrollTop : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.scrollTop" }
external inline scrollTop : (this: htmlBaseFontElement, assigned: int32) -> dom ()
{ inline "(#1.scrollTop = #2)" }
external inline scrollLeft : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.scrollLeft" }
external inline scrollLeft : (this: htmlBaseFontElement, assigned: int32) -> dom ()
{ inline "(#1.scrollLeft = #2)" }
external inline scrollWidth : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.scrollWidth" }
external inline scrollHeight : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.scrollHeight" }
external inline clientTop : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.clientTop" }
external inline clientLeft : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.clientLeft" }
external inline clientWidth : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.clientWidth" }
external inline clientHeight : (this: htmlBaseFontElement) -> dom int32
{ inline "#1.clientHeight" }
// HTMLBaseFontElement implements in extension NodeSelector (overloading)
external inline querySelector : (this: htmlBaseFontElement, selectors: string) -> dom element
{ inline "#1.querySelector(#2)" }

external inline querySelectorAll : (this: htmlBaseFontElement, selectors: string) -> dom nodeList
{ inline "#1.querySelectorAll(#2)" }

// HTMLBaseFontElement extends Node
external inline node : (htmlBaseFontElement) -> node // upcasting to extended type
{ inline "#1" }
// HTMLBaseFontElement implements in extension Node (overloading)
external inline nodeType : (this: htmlBaseFontElement) -> dom nodeType
{ inline "#1.nodeType" }
external inline nodeName : (this: htmlBaseFontElement) -> dom string
{ inline "#1.nodeName" }
external inline baseUri : (this: htmlBaseFontElement) -> dom string
{ inline "#1.baseURI" }
external inline ownerDocument : (this: htmlBaseFontElement) -> dom document
{ inline "#1.ownerDocument" }
external inline parentNode : (this: htmlBaseFontElement) -> dom node
{ inline "#1.parentNode" }
external inline parentElement : (this: htmlBaseFontElement) -> dom element
{ inline "#1.parentElement" }
external inline hasChildNodes : (this: htmlBaseFontElement) -> dom bool
{ inline "#1.hasChildNodes()" }

external inline childNodes : (this: htmlBaseFontElement) -> dom nodeList
{ inline "#1.childNodes" }
external inline firstChild : (this: htmlBaseFontElement) -> dom node
{ inline "#1.firstChild" }
external inline lastChild : (this: htmlBaseFontElement) -> dom node
{ inline "#1.lastChild" }
external inline previousSibling : (this: htmlBaseFontElement) -> dom node
{ inline "#1.previousSibling" }
external inline nextSibling : (this: htmlBaseFontElement) -> dom node
{ inline "#1.nextSibling" }
external inline compareDocumentPosition : (this: htmlBaseFontElement, other: node) -> dom uint16
{ inline "#1.compareDocumentPosition(#2)" }

external inline nodeValue : (this: htmlBaseFontElement) -> dom string
{ inline "#1.nodeValue" }
external inline nodeValue : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.nodeValue = #2)" }
external inline textContent : (this: htmlBaseFontElement) -> dom string
{ inline "#1.textContent" }
external inline textContent : (this: htmlBaseFontElement, assigned: string) -> dom ()
{ inline "(#1.textContent = #2)" }
external inline insertBefore : (this: htmlBaseFontElement, newChild: node, refChild: node) -> dom node
{ inline "#1.insertBefore(#2, #3)" }

external inline replaceChild : (this: htmlBaseFontElement, newChild: node, oldChild: node) -> dom node
{ inline "#1.replaceChild(#2, #3)" }

external inline removeChild : (this: htmlBaseFontElement, oldChild: node) -> dom node
{ inline "#1.removeChild(#2)" }

external inline appendChild : (this: htmlBaseFontElement, newChild: node) -> dom node
{ inline "#1.appendChild(#2)" }

external inline cloneNode : (this: htmlBaseFontElement, deep: bool) -> dom node
{ inline "#1.cloneNode(#2)" }

external inline isSameNode : (this: htmlBaseFontElement, node: node) -> dom bool
{ inline "#1.isSameNode(#2)" }

external inline isEqualNode : (this: htmlBaseFontElement, node: node) -> dom bool
{ inline "#1.isEqualNode(#2)" }

external inline lookupPrefix : (this: htmlBaseFontElement, namespace: string) -> dom string
{ inline "#1.lookupPrefix(#2)" }

external inline lookupNamespaceUri : (this: htmlBaseFontElement, prefix_: string) -> dom string
{ inline "#1.lookupNamespaceURI(#2)" }

external inline isDefaultNamespace : (this: htmlBaseFontElement, namespace: string) -> dom bool
{ inline "#1.isDefaultNamespace(#2)" }

// HTMLBaseFontElement extends EventTarget
external inline eventTarget : (htmlBaseFontElement) -> eventTarget // upcasting to extended type
{ inline "#1" }
// HTMLBaseFontElement implements in extension EventTarget (overloading)
external inline addEventListener : (this: htmlBaseFontElement, type_: string, listener: eventListener) -> dom ()
{ inline "#1.addEventListener(#2, #3)" }

external inline addEventListener : (this: htmlBaseFontElement, type_: string, listener: eventListener, capture: bool) -> dom ()
{ inline "#1.addEventListener(#2, #3, #4)" }

external inline removeEventListener : (this: htmlBaseFontElement, type_: string, listener: eventListener) -> dom ()
{ inline "#1.removeEventListener(#2, #3)" }

external inline removeEventListener : (this: htmlBaseFontElement, type_: string, listener: eventListener, capture: bool) -> dom ()
{ inline "#1.removeEventListener(#2, #3, #4)" }

external inline dispatchEvent : (this: htmlBaseFontElement, event: event) -> dom bool
{ inline "#1.dispatchEvent(#2)" }

