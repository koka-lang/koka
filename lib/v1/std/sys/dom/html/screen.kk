public module sys/dom/html/screen

// Interface Screen (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeScreen  : forall<a> (a) -> maybe<screen>
{ inline "(#1.toString()==='[object Screen]'?std_core.Just(#1):std_core.Nothing)" }
external inline toScreen : forall<a> (a) -> exn screen
{ inline "(#1.toString()==='[object Screen]'?#1:std_core.error('toScreen: cast failed'))" }


// Screen implements Screen (supplemental)
external inline availWidth : (this: screen) -> dom uint32
{ inline "#1.availWidth" }
external inline availHeight : (this: screen) -> dom uint32
{ inline "#1.availHeight" }
external inline width : (this: screen) -> dom uint32
{ inline "#1.width" }
external inline height : (this: screen) -> dom uint32
{ inline "#1.height" }
external inline colorDepth : (this: screen) -> dom uint32
{ inline "#1.colorDepth" }
external inline pixelDepth : (this: screen) -> dom uint32
{ inline "#1.pixelDepth" }
