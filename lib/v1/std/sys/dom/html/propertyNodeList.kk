public module sys/dom/html/propertyNodeList

// Interface PropertyNodeList (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybePropertyNodeList  : forall<a> (a) -> maybe<propertyNodeList>
{ inline "(#1.toString()==='[object PropertyNodeList]'?std_core.Just(#1):std_core.Nothing)" }
external inline toPropertyNodeList : forall<a> (a) -> exn propertyNodeList
{ inline "(#1.toString()==='[object PropertyNodeList]'?#1:std_core.error('toPropertyNodeList: cast failed'))" }


// PropertyNodeList implements PropertyNodeList (supplemental)
external inline getValues : (this: propertyNodeList) -> dom propertyValueArray
{ inline "#1.getValues()" }

// PropertyNodeList extends NodeList
external inline nodeList : (propertyNodeList) -> nodeList // upcasting to extended type
{ inline "#1" }
// PropertyNodeList implements in extension NodeList (overloading)
external inline item : (this: propertyNodeList, index: uint32) -> dom node
{ inline "#1.item(#2)" }

external inline length : (this: propertyNodeList) -> dom uint32
{ inline "#1.length" }
