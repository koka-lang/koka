public module sys/dom/events/compositionEvent

// Interface CompositionEvent (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeCompositionEvent  : forall<a> (a) -> maybe<compositionEvent>
{ inline "(#1.toString()==='[object CompositionEvent]'?std_core.Just(#1):std_core.Nothing)" }
external inline toCompositionEvent : forall<a> (a) -> exn compositionEvent
{ inline "(#1.toString()==='[object CompositionEvent]'?#1:std_core.error('toCompositionEvent: cast failed'))" }


// CompositionEvent implements CompositionEvent (supplemental)
external inline data : (this: compositionEvent) -> dom string
{ inline "#1.data" }
external inline locale : (this: compositionEvent) -> dom string
{ inline "#1.locale" }
external inline initCompositionEvent : (this: compositionEvent, typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: abstractView, dataArg: string, localeArg: string) -> dom ()
{ inline "#1.initCompositionEvent(#2, #3, #4, #5, #6, #7)" }

// CompositionEvent extends UIEvent
external inline uiEvent : (compositionEvent) -> uiEvent // upcasting to extended type
{ inline "#1" }
// CompositionEvent implements in extension UIEvent (overloading)
external inline view : (this: compositionEvent) -> dom abstractView
{ inline "#1.view" }
external inline detail : (this: compositionEvent) -> dom int32
{ inline "#1.detail" }
external inline initUiEvent : (this: compositionEvent, typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: abstractView, detailArg: int32) -> dom ()
{ inline "#1.initUIEvent(#2, #3, #4, #5, #6)" }

// CompositionEvent extends Event
external inline event : (compositionEvent) -> event // upcasting to extended type
{ inline "#1" }
// CompositionEvent implements in extension Event (overloading)
external inline type_ : (this: compositionEvent) -> dom string
{ inline "#1.type" }
external inline target : (this: compositionEvent) -> dom eventTarget
{ inline "#1.target" }
external inline currentTarget : (this: compositionEvent) -> dom eventTarget
{ inline "#1.currentTarget" }
external inline eventPhase : (this: compositionEvent) -> dom eventPhase
{ inline "#1.eventPhase" }
external inline stopPropagation : (this: compositionEvent) -> dom ()
{ inline "#1.stopPropagation()" }

external inline stopImmediatePropagation : (this: compositionEvent) -> dom ()
{ inline "#1.stopImmediatePropagation()" }

external inline bubbles : (this: compositionEvent) -> dom bool
{ inline "#1.bubbles" }
external inline cancelable : (this: compositionEvent) -> dom bool
{ inline "#1.cancelable" }
external inline preventDefault : (this: compositionEvent) -> dom ()
{ inline "#1.preventDefault()" }

external inline defaultPrevented : (this: compositionEvent) -> dom bool
{ inline "#1.defaultPrevented" }
external inline isTrusted : (this: compositionEvent) -> dom bool
{ inline "#1.isTrusted" }
external inline timeStamp : (this: compositionEvent) -> dom domTimeStamp
{ inline "#1.timeStamp" }
external inline initEvent : (this: compositionEvent, type_: string, bubbles: bool, cancelable: bool) -> dom ()
{ inline "#1.initEvent(#2, #3, #4)" }

