public module sys/dom/css/cssPrimitiveValue

// Interface CSSPrimitiveValue (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeCssPrimitiveValue  : forall<a> (a) -> maybe<cssPrimitiveValue>
{ inline "(#1.toString()==='[object CSSPrimitiveValue]'?std_core.Just(#1):std_core.Nothing)" }
external inline toCssPrimitiveValue : forall<a> (a) -> exn cssPrimitiveValue
{ inline "(#1.toString()==='[object CSSPrimitiveValue]'?#1:std_core.error('toCssPrimitiveValue: cast failed'))" }


// CSSPrimitiveValue implements CSSPrimitiveValue (supplemental)
external inline primitiveType : (this: cssPrimitiveValue) -> dom cssPrimitiveType
{ inline "#1.primitiveType" }
external inline setFloatValue : (this: cssPrimitiveValue, unitType: uint16, floatValue: float32) -> dom ()
{ inline "#1.setFloatValue(#2, #3)" }

external inline getFloatValue : (this: cssPrimitiveValue, unitType: uint16) -> dom float32
{ inline "#1.getFloatValue(#2)" }

external inline setStringValue : (this: cssPrimitiveValue, stringType: uint16, stringValue: string) -> dom ()
{ inline "#1.setStringValue(#2, #3)" }

external inline getStringValue : (this: cssPrimitiveValue) -> dom string
{ inline "#1.getStringValue()" }

external inline getCounterValue : (this: cssPrimitiveValue) -> dom counter
{ inline "#1.getCounterValue()" }

external inline getRectValue : (this: cssPrimitiveValue) -> dom rect
{ inline "#1.getRectValue()" }

external inline getRgbColorValue : (this: cssPrimitiveValue) -> dom rgbColor
{ inline "#1.getRGBColorValue()" }

// CSSPrimitiveValue extends CSSValue
external inline cssValue : (cssPrimitiveValue) -> cssValue // upcasting to extended type
{ inline "#1" }
// CSSPrimitiveValue implements in extension CSSValue (overloading)
external inline cssText : (this: cssPrimitiveValue) -> dom string
{ inline "#1.cssText" }
external inline cssText : (this: cssPrimitiveValue, assigned: string) -> dom ()
{ inline "(#1.cssText = #2)" }
external inline cssValueType : (this: cssPrimitiveValue) -> dom cssValueType
{ inline "#1.cssValueType" }
