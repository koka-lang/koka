public module sys/dom/css/rect

// Interface Rect (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeRect  : forall<a> (a) -> maybe<rect>
{ inline "(#1.toString()==='[object Rect]'?std_core.Just(#1):std_core.Nothing)" }
external inline toRect : forall<a> (a) -> exn rect
{ inline "(#1.toString()==='[object Rect]'?#1:std_core.error('toRect: cast failed'))" }


// Rect implements Rect (supplemental)
external inline top : (this: rect) -> dom cssPrimitiveValue
{ inline "#1.top" }
external inline right : (this: rect) -> dom cssPrimitiveValue
{ inline "#1.right" }
external inline bottom : (this: rect) -> dom cssPrimitiveValue
{ inline "#1.bottom" }
external inline left : (this: rect) -> dom cssPrimitiveValue
{ inline "#1.left" }
