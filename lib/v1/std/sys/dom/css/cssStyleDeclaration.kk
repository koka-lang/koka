public module sys/dom/css/cssStyleDeclaration

// Interface CSSStyleDeclaration (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
external inline maybeCssStyleDeclaration  : forall<a> (a) -> maybe<cssStyleDeclaration>
{ inline "(#1.toString()==='[object CSSStyleDeclaration]'?std_core.Just(#1):std_core.Nothing)" }
external inline toCssStyleDeclaration : forall<a> (a) -> exn cssStyleDeclaration
{ inline "(#1.toString()==='[object CSSStyleDeclaration]'?#1:std_core.error('toCssStyleDeclaration: cast failed'))" }


// CSSStyleDeclaration implements CSSStyleDeclaration (supplemental)
external inline cssText : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cssText" }
external inline cssText : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cssText = #2)" }
external inline length : (this: cssStyleDeclaration) -> dom uint32
{ inline "#1.length" }
external inline item : (this: cssStyleDeclaration, index: uint32) -> dom string
{ inline "#1.item(#2)" }

external inline getPropertyValue : (this: cssStyleDeclaration, property: string) -> dom string
{ inline "#1.getPropertyValue(#2)" }

external inline getPropertyPriority : (this: cssStyleDeclaration, property: string) -> dom string
{ inline "#1.getPropertyPriority(#2)" }

external inline setProperty : (this: cssStyleDeclaration, property: string, value: string) -> dom ()
{ inline "#1.setProperty(#2, #3)" }

external inline setProperty : (this: cssStyleDeclaration, property: string, value: string, priority: string) -> dom ()
{ inline "#1.setProperty(#2, #3, #4)" }

external inline removeProperty : (this: cssStyleDeclaration, property: string) -> dom string
{ inline "#1.removeProperty(#2)" }

external inline values : (this: cssStyleDeclaration) -> dom cssStyleDeclarationValue
{ inline "#1.values" }
external inline parentRule : (this: cssStyleDeclaration) -> dom cssRule
{ inline "#1.parentRule" }
// CSSStyleDeclaration implements CSS2Properties (overloading)
external inline azimuth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.azimuth" }
external inline azimuth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.azimuth = #2)" }
external inline background : (this: cssStyleDeclaration) -> dom string
{ inline "#1.background" }
external inline background : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.background = #2)" }
external inline backgroundAttachment : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundAttachment" }
external inline backgroundAttachment : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundAttachment = #2)" }
external inline backgroundColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundColor" }
external inline backgroundColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundColor = #2)" }
external inline backgroundImage : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundImage" }
external inline backgroundImage : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundImage = #2)" }
external inline backgroundPosition : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundPosition" }
external inline backgroundPosition : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundPosition = #2)" }
external inline backgroundRepeat : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundRepeat" }
external inline backgroundRepeat : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundRepeat = #2)" }
external inline border : (this: cssStyleDeclaration) -> dom string
{ inline "#1.border" }
external inline border : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.border = #2)" }
external inline borderCollapse : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderCollapse" }
external inline borderCollapse : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderCollapse = #2)" }
external inline borderColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderColor" }
external inline borderColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderColor = #2)" }
external inline borderSpacing : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderSpacing" }
external inline borderSpacing : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderSpacing = #2)" }
external inline borderStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderStyle" }
external inline borderStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderStyle = #2)" }
external inline borderTop : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderTop" }
external inline borderTop : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderTop = #2)" }
external inline borderRight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderRight" }
external inline borderRight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderRight = #2)" }
external inline borderBottom : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderBottom" }
external inline borderBottom : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderBottom = #2)" }
external inline borderLeft : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderLeft" }
external inline borderLeft : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderLeft = #2)" }
external inline borderTopColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderTopColor" }
external inline borderTopColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderTopColor = #2)" }
external inline borderRightColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderRightColor" }
external inline borderRightColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderRightColor = #2)" }
external inline borderBottomColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderBottomColor" }
external inline borderBottomColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderBottomColor = #2)" }
external inline borderLeftColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderLeftColor" }
external inline borderLeftColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderLeftColor = #2)" }
external inline borderTopStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderTopStyle" }
external inline borderTopStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderTopStyle = #2)" }
external inline borderRightStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderRightStyle" }
external inline borderRightStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderRightStyle = #2)" }
external inline borderBottomStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderBottomStyle" }
external inline borderBottomStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderBottomStyle = #2)" }
external inline borderLeftStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderLeftStyle" }
external inline borderLeftStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderLeftStyle = #2)" }
external inline borderTopWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderTopWidth" }
external inline borderTopWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderTopWidth = #2)" }
external inline borderRightWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderRightWidth" }
external inline borderRightWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderRightWidth = #2)" }
external inline borderBottomWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderBottomWidth" }
external inline borderBottomWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderBottomWidth = #2)" }
external inline borderLeftWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderLeftWidth" }
external inline borderLeftWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderLeftWidth = #2)" }
external inline borderWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderWidth" }
external inline borderWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderWidth = #2)" }
external inline bottom : (this: cssStyleDeclaration) -> dom string
{ inline "#1.bottom" }
external inline bottom : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.bottom = #2)" }
external inline captionSide : (this: cssStyleDeclaration) -> dom string
{ inline "#1.captionSide" }
external inline captionSide : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.captionSide = #2)" }
external inline clear : (this: cssStyleDeclaration) -> dom string
{ inline "#1.clear" }
external inline clear : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.clear = #2)" }
external inline clip : (this: cssStyleDeclaration) -> dom string
{ inline "#1.clip" }
external inline clip : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.clip = #2)" }
external inline color : (this: cssStyleDeclaration) -> dom string
{ inline "#1.color" }
external inline color : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.color = #2)" }
external inline content : (this: cssStyleDeclaration) -> dom string
{ inline "#1.content" }
external inline content : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.content = #2)" }
external inline counterIncrement : (this: cssStyleDeclaration) -> dom string
{ inline "#1.counterIncrement" }
external inline counterIncrement : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.counterIncrement = #2)" }
external inline counterReset : (this: cssStyleDeclaration) -> dom string
{ inline "#1.counterReset" }
external inline counterReset : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.counterReset = #2)" }
external inline cue : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cue" }
external inline cue : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cue = #2)" }
external inline cueAfter : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cueAfter" }
external inline cueAfter : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cueAfter = #2)" }
external inline cueBefore : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cueBefore" }
external inline cueBefore : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cueBefore = #2)" }
external inline cursor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cursor" }
external inline cursor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cursor = #2)" }
external inline direction : (this: cssStyleDeclaration) -> dom string
{ inline "#1.direction" }
external inline direction : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.direction = #2)" }
external inline display : (this: cssStyleDeclaration) -> dom string
{ inline "#1.display" }
external inline display : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.display = #2)" }
external inline elevation : (this: cssStyleDeclaration) -> dom string
{ inline "#1.elevation" }
external inline elevation : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.elevation = #2)" }
external inline emptyCells : (this: cssStyleDeclaration) -> dom string
{ inline "#1.emptyCells" }
external inline emptyCells : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.emptyCells = #2)" }
external inline cssFloat : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cssFloat" }
external inline cssFloat : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cssFloat = #2)" }
external inline font : (this: cssStyleDeclaration) -> dom string
{ inline "#1.font" }
external inline font : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.font = #2)" }
external inline fontFamily : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontFamily" }
external inline fontFamily : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontFamily = #2)" }
external inline fontSize : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontSize" }
external inline fontSize : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontSize = #2)" }
external inline fontSizeAdjust : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontSizeAdjust" }
external inline fontSizeAdjust : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontSizeAdjust = #2)" }
external inline fontStretch : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontStretch" }
external inline fontStretch : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontStretch = #2)" }
external inline fontStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontStyle" }
external inline fontStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontStyle = #2)" }
external inline fontVariant : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontVariant" }
external inline fontVariant : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontVariant = #2)" }
external inline fontWeight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontWeight" }
external inline fontWeight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontWeight = #2)" }
external inline height : (this: cssStyleDeclaration) -> dom string
{ inline "#1.height" }
external inline height : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.height = #2)" }
external inline left : (this: cssStyleDeclaration) -> dom string
{ inline "#1.left" }
external inline left : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.left = #2)" }
external inline letterSpacing : (this: cssStyleDeclaration) -> dom string
{ inline "#1.letterSpacing" }
external inline letterSpacing : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.letterSpacing = #2)" }
external inline lineHeight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.lineHeight" }
external inline lineHeight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.lineHeight = #2)" }
external inline listStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.listStyle" }
external inline listStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.listStyle = #2)" }
external inline listStyleImage : (this: cssStyleDeclaration) -> dom string
{ inline "#1.listStyleImage" }
external inline listStyleImage : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.listStyleImage = #2)" }
external inline listStylePosition : (this: cssStyleDeclaration) -> dom string
{ inline "#1.listStylePosition" }
external inline listStylePosition : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.listStylePosition = #2)" }
external inline listStyleType : (this: cssStyleDeclaration) -> dom string
{ inline "#1.listStyleType" }
external inline listStyleType : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.listStyleType = #2)" }
external inline margin : (this: cssStyleDeclaration) -> dom string
{ inline "#1.margin" }
external inline margin : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.margin = #2)" }
external inline marginTop : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marginTop" }
external inline marginTop : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marginTop = #2)" }
external inline marginRight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marginRight" }
external inline marginRight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marginRight = #2)" }
external inline marginBottom : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marginBottom" }
external inline marginBottom : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marginBottom = #2)" }
external inline marginLeft : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marginLeft" }
external inline marginLeft : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marginLeft = #2)" }
external inline markerOffset : (this: cssStyleDeclaration) -> dom string
{ inline "#1.markerOffset" }
external inline markerOffset : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.markerOffset = #2)" }
external inline marks : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marks" }
external inline marks : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marks = #2)" }
external inline maxHeight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.maxHeight" }
external inline maxHeight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.maxHeight = #2)" }
external inline maxWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.maxWidth" }
external inline maxWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.maxWidth = #2)" }
external inline minHeight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.minHeight" }
external inline minHeight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.minHeight = #2)" }
external inline minWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.minWidth" }
external inline minWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.minWidth = #2)" }
external inline orphans : (this: cssStyleDeclaration) -> dom string
{ inline "#1.orphans" }
external inline orphans : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.orphans = #2)" }
external inline outline : (this: cssStyleDeclaration) -> dom string
{ inline "#1.outline" }
external inline outline : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.outline = #2)" }
external inline outlineColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.outlineColor" }
external inline outlineColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.outlineColor = #2)" }
external inline outlineStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.outlineStyle" }
external inline outlineStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.outlineStyle = #2)" }
external inline outlineWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.outlineWidth" }
external inline outlineWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.outlineWidth = #2)" }
external inline overflow : (this: cssStyleDeclaration) -> dom string
{ inline "#1.overflow" }
external inline overflow : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.overflow = #2)" }
external inline padding : (this: cssStyleDeclaration) -> dom string
{ inline "#1.padding" }
external inline padding : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.padding = #2)" }
external inline paddingTop : (this: cssStyleDeclaration) -> dom string
{ inline "#1.paddingTop" }
external inline paddingTop : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.paddingTop = #2)" }
external inline paddingRight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.paddingRight" }
external inline paddingRight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.paddingRight = #2)" }
external inline paddingBottom : (this: cssStyleDeclaration) -> dom string
{ inline "#1.paddingBottom" }
external inline paddingBottom : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.paddingBottom = #2)" }
external inline paddingLeft : (this: cssStyleDeclaration) -> dom string
{ inline "#1.paddingLeft" }
external inline paddingLeft : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.paddingLeft = #2)" }
external inline page : (this: cssStyleDeclaration) -> dom string
{ inline "#1.page" }
external inline page : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.page = #2)" }
external inline pageBreakAfter : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pageBreakAfter" }
external inline pageBreakAfter : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pageBreakAfter = #2)" }
external inline pageBreakBefore : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pageBreakBefore" }
external inline pageBreakBefore : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pageBreakBefore = #2)" }
external inline pageBreakInside : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pageBreakInside" }
external inline pageBreakInside : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pageBreakInside = #2)" }
external inline pause : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pause" }
external inline pause : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pause = #2)" }
external inline pauseAfter : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pauseAfter" }
external inline pauseAfter : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pauseAfter = #2)" }
external inline pauseBefore : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pauseBefore" }
external inline pauseBefore : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pauseBefore = #2)" }
external inline pitch : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pitch" }
external inline pitch : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pitch = #2)" }
external inline pitchRange : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pitchRange" }
external inline pitchRange : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pitchRange = #2)" }
external inline playDuring : (this: cssStyleDeclaration) -> dom string
{ inline "#1.playDuring" }
external inline playDuring : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.playDuring = #2)" }
external inline position : (this: cssStyleDeclaration) -> dom string
{ inline "#1.position" }
external inline position : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.position = #2)" }
external inline quotes : (this: cssStyleDeclaration) -> dom string
{ inline "#1.quotes" }
external inline quotes : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.quotes = #2)" }
external inline richness : (this: cssStyleDeclaration) -> dom string
{ inline "#1.richness" }
external inline richness : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.richness = #2)" }
external inline right : (this: cssStyleDeclaration) -> dom string
{ inline "#1.right" }
external inline right : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.right = #2)" }
external inline size : (this: cssStyleDeclaration) -> dom string
{ inline "#1.size" }
external inline size : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.size = #2)" }
external inline speak : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speak" }
external inline speak : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speak = #2)" }
external inline speakHeader : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speakHeader" }
external inline speakHeader : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speakHeader = #2)" }
external inline speakNumeral : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speakNumeral" }
external inline speakNumeral : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speakNumeral = #2)" }
external inline speakPunctuation : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speakPunctuation" }
external inline speakPunctuation : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speakPunctuation = #2)" }
external inline speechRate : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speechRate" }
external inline speechRate : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speechRate = #2)" }
external inline stress : (this: cssStyleDeclaration) -> dom string
{ inline "#1.stress" }
external inline stress : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.stress = #2)" }
external inline tableLayout : (this: cssStyleDeclaration) -> dom string
{ inline "#1.tableLayout" }
external inline tableLayout : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.tableLayout = #2)" }
external inline textAlign : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textAlign" }
external inline textAlign : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textAlign = #2)" }
external inline textDecoration : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textDecoration" }
external inline textDecoration : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textDecoration = #2)" }
external inline textIndent : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textIndent" }
external inline textIndent : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textIndent = #2)" }
external inline textShadow : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textShadow" }
external inline textShadow : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textShadow = #2)" }
external inline textTransform : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textTransform" }
external inline textTransform : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textTransform = #2)" }
external inline top : (this: cssStyleDeclaration) -> dom string
{ inline "#1.top" }
external inline top : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.top = #2)" }
external inline unicodeBidi : (this: cssStyleDeclaration) -> dom string
{ inline "#1.unicodeBidi" }
external inline unicodeBidi : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.unicodeBidi = #2)" }
external inline verticalAlign : (this: cssStyleDeclaration) -> dom string
{ inline "#1.verticalAlign" }
external inline verticalAlign : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.verticalAlign = #2)" }
external inline visibility : (this: cssStyleDeclaration) -> dom string
{ inline "#1.visibility" }
external inline visibility : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.visibility = #2)" }
external inline voiceFamily : (this: cssStyleDeclaration) -> dom string
{ inline "#1.voiceFamily" }
external inline voiceFamily : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.voiceFamily = #2)" }
external inline volume : (this: cssStyleDeclaration) -> dom string
{ inline "#1.volume" }
external inline volume : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.volume = #2)" }
external inline whiteSpace : (this: cssStyleDeclaration) -> dom string
{ inline "#1.whiteSpace" }
external inline whiteSpace : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.whiteSpace = #2)" }
external inline widows : (this: cssStyleDeclaration) -> dom string
{ inline "#1.widows" }
external inline widows : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.widows = #2)" }
external inline width : (this: cssStyleDeclaration) -> dom string
{ inline "#1.width" }
external inline width : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.width = #2)" }
external inline wordSpacing : (this: cssStyleDeclaration) -> dom string
{ inline "#1.wordSpacing" }
external inline wordSpacing : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.wordSpacing = #2)" }
external inline zIndex : (this: cssStyleDeclaration) -> dom string
{ inline "#1.zIndex" }
external inline zIndex : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.zIndex = #2)" }
