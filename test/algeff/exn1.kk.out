[01;30moperator branch (amb_handle) flip: resume scoped
[00;39;49m[00m[01;30moperator branch (state_handle) get: resume tail
[00;39;49m[00m[01;30moperator branch (state_handle) set: resume tail
[00;39;49m[00m[False,False,True,True]
[False,False]
.Op-flip : .op-flip
.Op-get : forall<a> .op-get<a>
.Op-set : forall<a> (i : a) -> .op-set<a>
.Ops-flip : forall<a> (flip : .op-flip) -> .ops-amb<bool>
.Ops-get : forall<a,b> (get : .op-get<a>) -> .ops-state<a,a>
.Ops-set : forall<a,b> (set : .op-set<a>) -> .ops-state<a,()>
.tag-amb : string
.tag-state : string
amb_handle : forall<a,e> (action : () -> <amb|e> a) -> e list<a>
flip : () -> amb bool
foo : () -> <amb,state<int>> bool
get : forall<a> () -> (state<a>) a
main : () -> console ()
set : forall<a> (i : a) -> (state<a>) ()
state_handle: forall<a,b,e> (i : a, action : () -> <state<a>|e> b) -> e b
test1 : () -> exn list<bool>
test2 : () -> list<bool>
test3 : () -> list<bool>
xor : () -> <amb,exn> bool