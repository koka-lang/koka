<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>author</key>
	<string>Daan Leijen</string>
	<key>fileTypes</key>
	<array>
		<string>kk</string>
		<string>kki</string>
	</array>
	<key>firstLineMatch</key>
	<string>\s*(public|private)?\s*(module)\s*((interface)?)\s*(([a-z][\w\-]*/)*[a-z][\w\-]*)</string>
	<key>foldingStartMarker</key>
	<string>{\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*}</string>
	<key>name</key>
	<string>Koka</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#line_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_directive</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#litstring</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#character</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#characteresc</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type_app</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#top_type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#top_type_type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#top_type_alias</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#top_type_struct_args</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#top_type_struct</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#top_type_interface</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#top_type_quantifier</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decl_function</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decl_external</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decl_val</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decl_var</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decl_param</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#module_id</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#import_id</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#import_id2</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#libraryop</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#libraryid</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#dot</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reservedid</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reservedop</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#qidentifier</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#qconstructor</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#identifier</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constructor</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#special</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#minus</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#wildcard</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#inv_character</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#whitespace</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block_comment</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.koka</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.koka</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.doc.pre.koka</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\|(([^\|]|\|\|)*)\|</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.doc.source.koka</string>
						</dict>
					</dict>
					<key>match</key>
					<string>"(([^"]|"")*)"</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.doc.emph.koka</string>
						</dict>
					</dict>
					<key>match</key>
					<string>''(.*)''</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*""?\s*$</string>
					<key>contentName</key>
					<string>comment.doc.block.source.koka</string>
					<key>end</key>
					<string>^\s*"\s*$</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*\|\s*$</string>
					<key>contentName</key>
					<string>comment.doc.block.pre.koka</string>
					<key>end</key>
					<string>^\s*\|\s*$</string>
				</dict>
			</array>
		</dict>
		<key>character</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.character.koka</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.character.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>'[^\'\\$]'</string>
			<key>name</key>
			<string>string.quoted.single.koka</string>
		</dict>
		<key>characteresc</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quoted.single.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.koka</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.koka</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.quoted.single.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(')(\\([abfnrtv0\\"'\?]|x[\da-fA-F]{2}|u[\da-fA-F]{4}|U[\da-fA-F]{6}))(')</string>
		</dict>
		<key>constructor</key>
		<dict>
			<key>match</key>
			<string>[A-Z][\w\-]*[\'\?]*|\(,+\)</string>
			<key>name</key>
			<string>constant.other.constructor.koka</string>
		</dict>
		<key>decl_external</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.function.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.koka</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(extern|external)\s+(include|inline)?\s*([a-z][\w\-]*|\([$%&amp;\*\+@!/\\\^~=\.:\-\?\|&lt;&gt;]+\)|\[\])?</string>
		</dict>
		<key>decl_function</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.function.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(fun|function|val|var|use|using)\s+([a-z][\w\-]*[\'\?]*|\([$%&amp;\*\+@!/\\\^~=\.:\-\?\|&lt;&gt;]+\)|\[\])</string>
		</dict>
		<key>decl_function0</key>
		<dict>
			<key>begin</key>
			<string>(fun|function)\s*(([a-z][\w\-]*|\([$%&amp;\*\+@!/\\\^~=\.:\-\?\|&lt;&gt;]+\)|\[\]))?\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.function.koka</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.koka</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[\)\{\}\[\]=;]|(infix|infixr|infixl|type|cotype|rectype|alias|interface|instance|extern|external|fun|function|val|var|use|using|con|if|then|else|elif|match|inject|handle|handler|return|module|import|as|public|private|abstract|cont)(?![\w\-?']))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>invalid.keyword.koka</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#fun_parameters</string>
				</dict>
			</array>
		</dict>
		<key>decl_param</key>
		<dict>
			<key>match</key>
			<string>([a-z][\w\-]*[\'\?]*)\s*(?=:)</string>
			<key>name</key>
			<string>entity.name.param.koka</string>
		</dict>
		<key>decl_val</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.val.koka</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.val.koka</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.other.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(((val|use)\s+)?)(([a-z][\w\-]*[\'\?]*)|\([$%&amp;\*\+@!/\\\^~=\.:\-\?\|&lt;&gt;]+\))\s*(=)(?![$%&amp;\*\+@!/\\\^~=\.:\-\|&lt;&gt;])</string>
		</dict>
		<key>decl_var</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.var.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.var.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(var)\s+([a-z][\w\-]*[\'\?]*|\([$%&amp;\*\+@!/\\\^~=\.:\-\?\|&lt;&gt;]+\))</string>
		</dict>
		<key>dot</key>
		<dict>
			<key>match</key>
			<string>\.</string>
			<key>name</key>
			<string>keyword.dot.koka</string>
		</dict>
		<key>fun_parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#param_identifier</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[,]</string>
					<key>name</key>
					<string>punctuation.separator.koka</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#top_type</string>
				</dict>
			</array>
		</dict>
		<key>identifier</key>
		<dict>
			<key>match</key>
			<string>[a-z][\w\-]*[\'\?]*</string>
			<key>name</key>
			<string>variable.koka</string>
		</dict>
		<key>import_id</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.koka</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.module.koka</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.koka</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.module.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(import)(\s+(([a-z][\w\-]*/)*[a-z][\w\-]*)(\s+(=)(\s+(([a-z][\w\-]*/)*[a-z][\w\-]*))?))</string>
		</dict>
		<key>import_id2</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.koka</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.module.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(import)(\s+(([a-z][\w\-]*/)*[a-z][\w\-]*))</string>
		</dict>
		<key>inv_character</key>
		<dict>
			<key>match</key>
			<string>'([^'\\\n]|\\(.|x..|u....|U......))'|'$|''?</string>
			<key>name</key>
			<string>invalid.string.quoted.single.koka</string>
		</dict>
		<key>libraryid</key>
		<dict>
			<key>match</key>
			<string>(repeat|for|foreach|while|foreach-indexed|inline|cs|js|file|ref|assigned|resume|cont)(?![\w\-?'])</string>
			<key>name</key>
			<string>support.function.koka</string>
		</dict>
		<key>libraryop</key>
		<dict>
			<key>match</key>
			<string>(!)(?![$%&amp;\*\+@!/\\\^~=\.:\-\?\|&lt;&gt;])</string>
			<key>name</key>
			<string>support.function.koka</string>
		</dict>
		<key>line_comment</key>
		<dict>
			<key>begin</key>
			<string>//</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.double-slash.koka</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.doc.pre.koka</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\|(([^\|]|\|\|)*)\|</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.doc.source.koka</string>
						</dict>
					</dict>
					<key>match</key>
					<string>"(([^"]|"")*)"</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.doc.emph.koka</string>
						</dict>
					</dict>
					<key>match</key>
					<string>''(.*)''</string>
				</dict>
			</array>
		</dict>
		<key>line_directive</key>
		<dict>
			<key>match</key>
			<string>^\s*#.*$</string>
			<key>name</key>
			<string>meta.preprocessor.koka</string>
		</dict>
		<key>litstring</key>
		<dict>
			<key>begin</key>
			<string>@"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.koka</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.koka</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[^"]+</string>
					<key>name</key>
					<string>string.quoted.double.regular.koka</string>
				</dict>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.koka</string>
				</dict>
			</array>
		</dict>
		<key>minus</key>
		<dict>
			<key>match</key>
			<string>-(?![$%&amp;\*\+@!/\\\^~=\.:\-\?\|&lt;&gt;])</string>
			<key>name</key>
			<string>variable.operator.minus.koka</string>
		</dict>
		<key>module_id</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.koka</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.koka</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.module.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(module)\s*((interface)?)\s*(([a-z][\w\-]*/)*[a-z][\w\-]*)</string>
		</dict>
		<key>number</key>
		<dict>
			<key>match</key>
			<string>-?(?:0[xX][\da-fA-F]+(\.[\da-fA-F]+)?([pP][\-+]?\d+)?|\d+(\.\d+([eE][\-+]?\d+)?)?)</string>
			<key>name</key>
			<string>constant.numeric.koka</string>
		</dict>
		<key>operator</key>
		<dict>
			<key>match</key>
			<string>[$%&amp;\*\+@!/\\\^~=\.:\-\?\|&lt;&gt;]+</string>
			<key>name</key>
			<string>variable.operator.koka</string>
		</dict>
		<key>param_identifier</key>
		<dict>
			<key>match</key>
			<string>([a-z][\w\-]*[\'\?]*)\s*(?=[:,\)])</string>
			<key>name</key>
			<string>entity.name.function.koka</string>
		</dict>
		<key>qconstructor</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.module.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.other.constructor.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>([a-z][\w\-]*/)([A-Z][\w\-]*[\'\?]*)</string>
		</dict>
		<key>qidentifier</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.module.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>([a-z][\w\-]*/)+([a-z][\w\-]*[\'\?]*)</string>
		</dict>
		<key>reservedid</key>
		<dict>
			<key>match</key>
			<string>(infix|infixr|infixl|prefix|postfix|type|cotype|rectype|struct|alias|forall|exists|some|interface|instance|with|extern|external|fun|function|val|var|use|using|con|if|then|else|elif|match|inject|handle(?:\s*(?:resource))?|handler(?:\s*(?:resource))?|shallow|return|module|import|as|in|public|private|abstract|effect|cont)(?![\w\-?'])</string>
			<key>name</key>
			<string>keyword.other.koka</string>
		</dict>
		<key>reservedop</key>
		<dict>
			<key>match</key>
			<string>(=|\-&gt;|:|\.|:=)(?![$%&amp;\*\+@!/\\\^~=\.:\-\?\|&lt;&gt;])</string>
			<key>name</key>
			<string>keyword.koka</string>
		</dict>
		<key>special</key>
		<dict>
			<key>match</key>
			<string>[{}\(\)\[\];,]</string>
			<key>name</key>
			<string>punctuation.separator.koka</string>
		</dict>
		<key>string</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"|$</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.koka</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.koka</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([^"\\]|\\.)+$</string>
					<key>name</key>
					<string>invalid.string.quoted.double.koka</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^"\\]+</string>
					<key>name</key>
					<string>string.quoted.double.regular.koka</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\([abfnrtvz0\\"'\?]|x[\da-fA-F]{2}|u[\da-fA-F]{4}|U[\da-fA-F]{6})</string>
					<key>name</key>
					<string>constant.character.escape.koka</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>invalid.string.quoted.double.koka</string>
				</dict>
			</array>
		</dict>
		<key>top_type</key>
		<dict>
			<key>begin</key>
			<string>(:(?![$%&amp;\*\+@!\\\^~=\.:\-\|&lt;&gt;]))|(with|iff|when|in)(?![\w\-])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[,\)\{\}\[\]=;"`]|  |(infix|infixr|infixl|type|cotype|rectype|effect|alias|interface|instance|extern|external|fun|function|val|var|use|using|con|if|then|else|elif|match|inject|handle|handler|return|module|import|as|public|private|abstract)(?![\w\-?']))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>invalid.keyword.koka</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_content_top</string>
				</dict>
			</array>
		</dict>
		<key>top_type_alias</key>
		<dict>
			<key>begin</key>
			<string>(alias)\s+([a-z]\w+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.type.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.storage.type.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[,\)\{\}\[\];"`]|(infix|infixr|infixl|type|cotype|rectype|alias|effect|interface|instance|extern|external|fun|function|val|var|use|using|con|if|then|else|elif|match|inject|handle|handler|return|module|import|as|public|private|abstract)(?![\w\-?']))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>invalid.keyword.koka</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.other.koka</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_content_top</string>
				</dict>
			</array>
		</dict>
		<key>top_type_interface</key>
		<dict>
			<key>begin</key>
			<string>(interface|instance)\s+([A-Z]\w+|&lt;&gt;|&lt;\|&gt;|\(,*\))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.type.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.interface.storage.type.interface.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[\)\{\}\[\]=;"`]|(infix|infixr|infixl|type|cotype|rectype|effect|alias|interface|instance|extern|external|fun|function|val|var|use|using|con|if|then|else|elif|match|inject|handle|handler|return|module|import|as|public|private|abstract)(?![\w\-?']))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.koka</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_content_top</string>
				</dict>
			</array>
		</dict>
		<key>top_type_quantifier</key>
		<dict>
			<key>begin</key>
			<string>(exists|forall|some)(\s*)(&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.koka</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.punctuation.separator.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)|(?=[\)\{\}\[\]=;"`]|(infix|infixr|infixl|type|cotype|rectype|effect|alias|interface|instance|extern|external|fun|function|val|var|use|using|con|if|then|else|elif|match|inject|handle|handler|return|module|import|as|public|private|abstract)(?![\w\-?']))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.punctuation.separator.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.keyword.koka</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_content</string>
				</dict>
			</array>
		</dict>
		<key>top_type_struct</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.type.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.storage.type.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(struct)\s+([a-z][\w\-]*|\(,*\))</string>
		</dict>
		<key>top_type_struct_args</key>
		<dict>
			<key>begin</key>
			<string>(struct)\s+([a-z][\w\-]*|\(,*\))\s*(&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.type.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.storage.type.koka</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.punctuation.separator.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)|(?=[\)\{\}\[\]=;"`]|(infix|infixr|infixl|type|cotype|rectype|effect|alias|interface|instance|extern|external|fun|function|val|var|use|using|con|if|then|else|elif|match|inject|handle|handler|return|module|import|as|public|private|abstract)(?![\w\-?']))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.punctuation.separator.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.keyword.koka</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_content</string>
				</dict>
			</array>
		</dict>
		<key>top_type_type</key>
		<dict>
			<key>begin</key>
			<string>((?:cotype|type|rectype)(?:\s+(?:open|extend))?|effect(?:\s+(?:linear|resource))?)\s+([a-z][\w\-]+|&lt;&gt;|&lt;\|&gt;|\(,*\))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.type.koka</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.storage.type.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[\)\{\}\[\]=;"`]|(infix|infixr|infixl|type|cotype|rectype|effect|alias|interface|instance|extern|external|fun|function|val|var|use|using|con|if|then|else|elif|match|inject|handle|handler|return|module|import|as|public|private|abstract)(?![\w\-?']))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.koka</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_content_top</string>
				</dict>
			</array>
		</dict>
		<key>type_app</key>
		<dict>
			<key>begin</key>
			<string>&lt;(?![$%&amp;\*\+@!/\\\^~=\.:\-\?\|\s\d()])</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.punctuation.separator.koka</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.punctuation.separator.koka</string>
				</dict>
			</dict>
			<key>name</key>
			<string>storage.type.koka</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_content</string>
				</dict>
			</array>
		</dict>
		<key>type_content</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_parameter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_content_top</string>
				</dict>
			</array>
		</dict>
		<key>type_content_top</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(forall|exists|some|with|in|iff|when|is|if)(?![\w\-])</string>
					<key>name</key>
					<string>keyword.other.koka</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-&gt;|::?|\.)(?![$%&amp;\*\+@!\\\^~=\.:\-\?\|&lt;&gt;])</string>
					<key>name</key>
					<string>keyword.type.koka</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_qidentifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_identifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_kind</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_interface</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.punctuation.separator.koka</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.punctuation.separator.koka</string>
						</dict>
					</dict>
					<key>name</key>
					<string>storage.type.koka</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;(?![$%&amp;\*\+@!/\\\^~=\.:\-\?\|])</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.punctuation.separator.koka</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.punctuation.separator.koka</string>
						</dict>
					</dict>
					<key>name</key>
					<string>storage.type.koka</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.punctuation.separator.koka</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.punctuation.separator.koka</string>
						</dict>
					</dict>
					<key>name</key>
					<string>storage.type.koka</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[;,]|:</string>
					<key>name</key>
					<string>storage.type.punctuation.separator.koka</string>
				</dict>
			</array>
		</dict>
		<key>type_identifier</key>
		<dict>
			<key>match</key>
			<string>[a-z][\w\-]*[\'\?]*</string>
			<key>name</key>
			<string>storage.type.constant.koka</string>
		</dict>
		<key>type_interface</key>
		<dict>
			<key>match</key>
			<string>[A-Z][\w\-]+[\'\?]*</string>
			<key>name</key>
			<string>storage.type.interface.koka</string>
		</dict>
		<key>type_kind</key>
		<dict>
			<key>match</key>
			<string>[A-Z](?![\w\-])</string>
			<key>name</key>
			<string>storage.type.kind.koka</string>
		</dict>
		<key>type_parameter</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.typeparam.koka</string>
				</dict>
			</dict>
			<key>match</key>
			<string>([a-zA-Z][\w\-]*[\'\?]*)\s*:(?!:)</string>
		</dict>
		<key>type_qidentifier</key>
		<dict>
			<key>match</key>
			<string>([a-z][\w\-]*[\'\?]*/)+</string>
			<key>name</key>
			<string>entity.name.class.module.koka</string>
		</dict>
		<key>type_variable</key>
		<dict>
			<key>match</key>
			<string>([a-z][0-9]*|_[\w\-]*[\'\?]*|self)(?!\w)</string>
			<key>name</key>
			<string>storage.type.typevar.koka</string>
		</dict>
		<key>whitespace</key>
		<dict>
			<key>match</key>
			<string>[ \t]+</string>
			<key>name</key>
			<string>string.koka</string>
		</dict>
		<key>wildcard</key>
		<dict>
			<key>match</key>
			<string>_[\w\-]*[\'\?]*</string>
			<key>name</key>
			<string>variable.wildcard.koka</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.koka</string>
	<key>uuid</key>
	<string>c987c4f0-a938-47e3-a371-13d6c7542ed3</string>
</dict>
</plist>
